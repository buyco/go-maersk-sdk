/*
Track & Trace Events

Retrieve Track & Trace Events based on DCSA Interface standard v.2.2  This service provides shippers and consignees visibility to Shipment, Equipment and Transport events for shipments booked with A.P. Moller-Maersk A/S using standards set by the Digital Container Shipping Association.\\ <https://dcsa.org/>

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package maersk

import (
	"encoding/json"
)

// CreateAccessToken401ResponseErrorInner struct for CreateAccessToken401ResponseErrorInner
type CreateAccessToken401ResponseErrorInner struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Reason  *string `json:"reason,omitempty"`
	Status  *string `json:"status,omitempty"`
}

// NewCreateAccessToken401ResponseErrorInner instantiates a new CreateAccessToken401ResponseErrorInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAccessToken401ResponseErrorInner() *CreateAccessToken401ResponseErrorInner {
	this := CreateAccessToken401ResponseErrorInner{}
	return &this
}

// NewCreateAccessToken401ResponseErrorInnerWithDefaults instantiates a new CreateAccessToken401ResponseErrorInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAccessToken401ResponseErrorInnerWithDefaults() *CreateAccessToken401ResponseErrorInner {
	this := CreateAccessToken401ResponseErrorInner{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *CreateAccessToken401ResponseErrorInner) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccessToken401ResponseErrorInner) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *CreateAccessToken401ResponseErrorInner) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *CreateAccessToken401ResponseErrorInner) SetCode(v string) {
	o.Code = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *CreateAccessToken401ResponseErrorInner) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccessToken401ResponseErrorInner) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *CreateAccessToken401ResponseErrorInner) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *CreateAccessToken401ResponseErrorInner) SetMessage(v string) {
	o.Message = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *CreateAccessToken401ResponseErrorInner) GetReason() string {
	if o == nil || o.Reason == nil {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccessToken401ResponseErrorInner) GetReasonOk() (*string, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *CreateAccessToken401ResponseErrorInner) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *CreateAccessToken401ResponseErrorInner) SetReason(v string) {
	o.Reason = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CreateAccessToken401ResponseErrorInner) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccessToken401ResponseErrorInner) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CreateAccessToken401ResponseErrorInner) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CreateAccessToken401ResponseErrorInner) SetStatus(v string) {
	o.Status = &v
}

func (o CreateAccessToken401ResponseErrorInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableCreateAccessToken401ResponseErrorInner struct {
	value *CreateAccessToken401ResponseErrorInner
	isSet bool
}

func (v NullableCreateAccessToken401ResponseErrorInner) Get() *CreateAccessToken401ResponseErrorInner {
	return v.value
}

func (v *NullableCreateAccessToken401ResponseErrorInner) Set(val *CreateAccessToken401ResponseErrorInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAccessToken401ResponseErrorInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAccessToken401ResponseErrorInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAccessToken401ResponseErrorInner(val *CreateAccessToken401ResponseErrorInner) *NullableCreateAccessToken401ResponseErrorInner {
	return &NullableCreateAccessToken401ResponseErrorInner{value: val, isSet: true}
}

func (v NullableCreateAccessToken401ResponseErrorInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAccessToken401ResponseErrorInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
