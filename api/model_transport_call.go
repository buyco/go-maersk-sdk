/*
Track & Trace Events

Retrieve Track & Trace Events based on DCSA Interface standard v.2.2  This service provides shippers and consignees visibility to Shipment, Equipment and Transport events for shipments booked with A.P. Moller-Maersk A/S using standards set by the Digital Container Shipping Association.\\ <https://dcsa.org/> 

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// TransportCall struct for TransportCall
type TransportCall struct {
	// The unique identifier for a transport call
	TransportCallID *string `json:"transportCallID,omitempty"`
	// The code of the service for which the schedule details are published.
	CarrierServiceCode *string `json:"carrierServiceCode,omitempty"`
	// \\*\\*\\*do not use\\*\\*\\* this field is replaced by `exportVoyageNumber` from Version 1.1 and will be removed by the API from next major version  The vessel operator-specific identifier of the Voyage.\\ The export voyage is returned when there are multiple voyages. 
	// Deprecated
	CarrierVoyageNumber *string `json:"carrierVoyageNumber,omitempty"`
	// The vessel operator-specific identifier of the export Voyage.
	ExportVoyageNumber *string `json:"exportVoyageNumber,omitempty"`
	// The vessel operator-specific identifier of the import Voyage.
	ImportVoyageNumber *string `json:"importVoyageNumber,omitempty"`
	// Transport operator's key that uniquely identifies each individual call. This key is essential to distinguish between two separate calls at the same location within one voyage.
	TransportCallSequenceNumber *int32 `json:"transportCallSequenceNumber,omitempty"`
	// The UN Location code specifying where the place is located.
	UNLocationCode *string `json:"UNLocationCode,omitempty"`
	// The code used for identifying the specific facility. This code is not the UN Location Code.
	FacilityCode *string `json:"facilityCode,omitempty"`
	// The provider used for identifying the facility Code
	FacilityCodeListProvider *string `json:"facilityCodeListProvider,omitempty"`
	// A specialized version of the facilityCode to be used in TransportCalls. The code to identify the specific type of facility. * BOCR (Border crossing) * CLOC (Customer location) * COFS (Container freight station) * COYA (Deprecated - use OFFD intead) * OFFD (Off dock storage) * DEPO (Depot) * INTE (Inland terminal) * POTE (Port terminal) * RAMP (Ramp) 
	FacilityTypeCode *string `json:"facilityTypeCode,omitempty"`
	// An alternative way to capture the facility when no standardized DCSA facility code can be found.
	OtherFacility *string `json:"otherFacility,omitempty"`
	// The code specifying the mode of transport.
	ModeOfTransport string `json:"modeOfTransport"`
	Location *Location `json:"location,omitempty"`
	Vessel *Vessel `json:"vessel,omitempty"`
}

// NewTransportCall instantiates a new TransportCall object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransportCall(modeOfTransport string) *TransportCall {
	this := TransportCall{}
	this.ModeOfTransport = modeOfTransport
	return &this
}

// NewTransportCallWithDefaults instantiates a new TransportCall object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransportCallWithDefaults() *TransportCall {
	this := TransportCall{}
	return &this
}

// GetTransportCallID returns the TransportCallID field value if set, zero value otherwise.
func (o *TransportCall) GetTransportCallID() string {
	if o == nil || o.TransportCallID == nil {
		var ret string
		return ret
	}
	return *o.TransportCallID
}

// GetTransportCallIDOk returns a tuple with the TransportCallID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportCall) GetTransportCallIDOk() (*string, bool) {
	if o == nil || o.TransportCallID == nil {
		return nil, false
	}
	return o.TransportCallID, true
}

// HasTransportCallID returns a boolean if a field has been set.
func (o *TransportCall) HasTransportCallID() bool {
	if o != nil && o.TransportCallID != nil {
		return true
	}

	return false
}

// SetTransportCallID gets a reference to the given string and assigns it to the TransportCallID field.
func (o *TransportCall) SetTransportCallID(v string) {
	o.TransportCallID = &v
}

// GetCarrierServiceCode returns the CarrierServiceCode field value if set, zero value otherwise.
func (o *TransportCall) GetCarrierServiceCode() string {
	if o == nil || o.CarrierServiceCode == nil {
		var ret string
		return ret
	}
	return *o.CarrierServiceCode
}

// GetCarrierServiceCodeOk returns a tuple with the CarrierServiceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportCall) GetCarrierServiceCodeOk() (*string, bool) {
	if o == nil || o.CarrierServiceCode == nil {
		return nil, false
	}
	return o.CarrierServiceCode, true
}

// HasCarrierServiceCode returns a boolean if a field has been set.
func (o *TransportCall) HasCarrierServiceCode() bool {
	if o != nil && o.CarrierServiceCode != nil {
		return true
	}

	return false
}

// SetCarrierServiceCode gets a reference to the given string and assigns it to the CarrierServiceCode field.
func (o *TransportCall) SetCarrierServiceCode(v string) {
	o.CarrierServiceCode = &v
}

// GetCarrierVoyageNumber returns the CarrierVoyageNumber field value if set, zero value otherwise.
// Deprecated
func (o *TransportCall) GetCarrierVoyageNumber() string {
	if o == nil || o.CarrierVoyageNumber == nil {
		var ret string
		return ret
	}
	return *o.CarrierVoyageNumber
}

// GetCarrierVoyageNumberOk returns a tuple with the CarrierVoyageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *TransportCall) GetCarrierVoyageNumberOk() (*string, bool) {
	if o == nil || o.CarrierVoyageNumber == nil {
		return nil, false
	}
	return o.CarrierVoyageNumber, true
}

// HasCarrierVoyageNumber returns a boolean if a field has been set.
func (o *TransportCall) HasCarrierVoyageNumber() bool {
	if o != nil && o.CarrierVoyageNumber != nil {
		return true
	}

	return false
}

// SetCarrierVoyageNumber gets a reference to the given string and assigns it to the CarrierVoyageNumber field.
// Deprecated
func (o *TransportCall) SetCarrierVoyageNumber(v string) {
	o.CarrierVoyageNumber = &v
}

// GetExportVoyageNumber returns the ExportVoyageNumber field value if set, zero value otherwise.
func (o *TransportCall) GetExportVoyageNumber() string {
	if o == nil || o.ExportVoyageNumber == nil {
		var ret string
		return ret
	}
	return *o.ExportVoyageNumber
}

// GetExportVoyageNumberOk returns a tuple with the ExportVoyageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportCall) GetExportVoyageNumberOk() (*string, bool) {
	if o == nil || o.ExportVoyageNumber == nil {
		return nil, false
	}
	return o.ExportVoyageNumber, true
}

// HasExportVoyageNumber returns a boolean if a field has been set.
func (o *TransportCall) HasExportVoyageNumber() bool {
	if o != nil && o.ExportVoyageNumber != nil {
		return true
	}

	return false
}

// SetExportVoyageNumber gets a reference to the given string and assigns it to the ExportVoyageNumber field.
func (o *TransportCall) SetExportVoyageNumber(v string) {
	o.ExportVoyageNumber = &v
}

// GetImportVoyageNumber returns the ImportVoyageNumber field value if set, zero value otherwise.
func (o *TransportCall) GetImportVoyageNumber() string {
	if o == nil || o.ImportVoyageNumber == nil {
		var ret string
		return ret
	}
	return *o.ImportVoyageNumber
}

// GetImportVoyageNumberOk returns a tuple with the ImportVoyageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportCall) GetImportVoyageNumberOk() (*string, bool) {
	if o == nil || o.ImportVoyageNumber == nil {
		return nil, false
	}
	return o.ImportVoyageNumber, true
}

// HasImportVoyageNumber returns a boolean if a field has been set.
func (o *TransportCall) HasImportVoyageNumber() bool {
	if o != nil && o.ImportVoyageNumber != nil {
		return true
	}

	return false
}

// SetImportVoyageNumber gets a reference to the given string and assigns it to the ImportVoyageNumber field.
func (o *TransportCall) SetImportVoyageNumber(v string) {
	o.ImportVoyageNumber = &v
}

// GetTransportCallSequenceNumber returns the TransportCallSequenceNumber field value if set, zero value otherwise.
func (o *TransportCall) GetTransportCallSequenceNumber() int32 {
	if o == nil || o.TransportCallSequenceNumber == nil {
		var ret int32
		return ret
	}
	return *o.TransportCallSequenceNumber
}

// GetTransportCallSequenceNumberOk returns a tuple with the TransportCallSequenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportCall) GetTransportCallSequenceNumberOk() (*int32, bool) {
	if o == nil || o.TransportCallSequenceNumber == nil {
		return nil, false
	}
	return o.TransportCallSequenceNumber, true
}

// HasTransportCallSequenceNumber returns a boolean if a field has been set.
func (o *TransportCall) HasTransportCallSequenceNumber() bool {
	if o != nil && o.TransportCallSequenceNumber != nil {
		return true
	}

	return false
}

// SetTransportCallSequenceNumber gets a reference to the given int32 and assigns it to the TransportCallSequenceNumber field.
func (o *TransportCall) SetTransportCallSequenceNumber(v int32) {
	o.TransportCallSequenceNumber = &v
}

// GetUNLocationCode returns the UNLocationCode field value if set, zero value otherwise.
func (o *TransportCall) GetUNLocationCode() string {
	if o == nil || o.UNLocationCode == nil {
		var ret string
		return ret
	}
	return *o.UNLocationCode
}

// GetUNLocationCodeOk returns a tuple with the UNLocationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportCall) GetUNLocationCodeOk() (*string, bool) {
	if o == nil || o.UNLocationCode == nil {
		return nil, false
	}
	return o.UNLocationCode, true
}

// HasUNLocationCode returns a boolean if a field has been set.
func (o *TransportCall) HasUNLocationCode() bool {
	if o != nil && o.UNLocationCode != nil {
		return true
	}

	return false
}

// SetUNLocationCode gets a reference to the given string and assigns it to the UNLocationCode field.
func (o *TransportCall) SetUNLocationCode(v string) {
	o.UNLocationCode = &v
}

// GetFacilityCode returns the FacilityCode field value if set, zero value otherwise.
func (o *TransportCall) GetFacilityCode() string {
	if o == nil || o.FacilityCode == nil {
		var ret string
		return ret
	}
	return *o.FacilityCode
}

// GetFacilityCodeOk returns a tuple with the FacilityCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportCall) GetFacilityCodeOk() (*string, bool) {
	if o == nil || o.FacilityCode == nil {
		return nil, false
	}
	return o.FacilityCode, true
}

// HasFacilityCode returns a boolean if a field has been set.
func (o *TransportCall) HasFacilityCode() bool {
	if o != nil && o.FacilityCode != nil {
		return true
	}

	return false
}

// SetFacilityCode gets a reference to the given string and assigns it to the FacilityCode field.
func (o *TransportCall) SetFacilityCode(v string) {
	o.FacilityCode = &v
}

// GetFacilityCodeListProvider returns the FacilityCodeListProvider field value if set, zero value otherwise.
func (o *TransportCall) GetFacilityCodeListProvider() string {
	if o == nil || o.FacilityCodeListProvider == nil {
		var ret string
		return ret
	}
	return *o.FacilityCodeListProvider
}

// GetFacilityCodeListProviderOk returns a tuple with the FacilityCodeListProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportCall) GetFacilityCodeListProviderOk() (*string, bool) {
	if o == nil || o.FacilityCodeListProvider == nil {
		return nil, false
	}
	return o.FacilityCodeListProvider, true
}

// HasFacilityCodeListProvider returns a boolean if a field has been set.
func (o *TransportCall) HasFacilityCodeListProvider() bool {
	if o != nil && o.FacilityCodeListProvider != nil {
		return true
	}

	return false
}

// SetFacilityCodeListProvider gets a reference to the given string and assigns it to the FacilityCodeListProvider field.
func (o *TransportCall) SetFacilityCodeListProvider(v string) {
	o.FacilityCodeListProvider = &v
}

// GetFacilityTypeCode returns the FacilityTypeCode field value if set, zero value otherwise.
func (o *TransportCall) GetFacilityTypeCode() string {
	if o == nil || o.FacilityTypeCode == nil {
		var ret string
		return ret
	}
	return *o.FacilityTypeCode
}

// GetFacilityTypeCodeOk returns a tuple with the FacilityTypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportCall) GetFacilityTypeCodeOk() (*string, bool) {
	if o == nil || o.FacilityTypeCode == nil {
		return nil, false
	}
	return o.FacilityTypeCode, true
}

// HasFacilityTypeCode returns a boolean if a field has been set.
func (o *TransportCall) HasFacilityTypeCode() bool {
	if o != nil && o.FacilityTypeCode != nil {
		return true
	}

	return false
}

// SetFacilityTypeCode gets a reference to the given string and assigns it to the FacilityTypeCode field.
func (o *TransportCall) SetFacilityTypeCode(v string) {
	o.FacilityTypeCode = &v
}

// GetOtherFacility returns the OtherFacility field value if set, zero value otherwise.
func (o *TransportCall) GetOtherFacility() string {
	if o == nil || o.OtherFacility == nil {
		var ret string
		return ret
	}
	return *o.OtherFacility
}

// GetOtherFacilityOk returns a tuple with the OtherFacility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportCall) GetOtherFacilityOk() (*string, bool) {
	if o == nil || o.OtherFacility == nil {
		return nil, false
	}
	return o.OtherFacility, true
}

// HasOtherFacility returns a boolean if a field has been set.
func (o *TransportCall) HasOtherFacility() bool {
	if o != nil && o.OtherFacility != nil {
		return true
	}

	return false
}

// SetOtherFacility gets a reference to the given string and assigns it to the OtherFacility field.
func (o *TransportCall) SetOtherFacility(v string) {
	o.OtherFacility = &v
}

// GetModeOfTransport returns the ModeOfTransport field value
func (o *TransportCall) GetModeOfTransport() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModeOfTransport
}

// GetModeOfTransportOk returns a tuple with the ModeOfTransport field value
// and a boolean to check if the value has been set.
func (o *TransportCall) GetModeOfTransportOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModeOfTransport, true
}

// SetModeOfTransport sets field value
func (o *TransportCall) SetModeOfTransport(v string) {
	o.ModeOfTransport = v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *TransportCall) GetLocation() Location {
	if o == nil || o.Location == nil {
		var ret Location
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportCall) GetLocationOk() (*Location, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *TransportCall) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given Location and assigns it to the Location field.
func (o *TransportCall) SetLocation(v Location) {
	o.Location = &v
}

// GetVessel returns the Vessel field value if set, zero value otherwise.
func (o *TransportCall) GetVessel() Vessel {
	if o == nil || o.Vessel == nil {
		var ret Vessel
		return ret
	}
	return *o.Vessel
}

// GetVesselOk returns a tuple with the Vessel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportCall) GetVesselOk() (*Vessel, bool) {
	if o == nil || o.Vessel == nil {
		return nil, false
	}
	return o.Vessel, true
}

// HasVessel returns a boolean if a field has been set.
func (o *TransportCall) HasVessel() bool {
	if o != nil && o.Vessel != nil {
		return true
	}

	return false
}

// SetVessel gets a reference to the given Vessel and assigns it to the Vessel field.
func (o *TransportCall) SetVessel(v Vessel) {
	o.Vessel = &v
}

func (o TransportCall) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TransportCallID != nil {
		toSerialize["transportCallID"] = o.TransportCallID
	}
	if o.CarrierServiceCode != nil {
		toSerialize["carrierServiceCode"] = o.CarrierServiceCode
	}
	if o.CarrierVoyageNumber != nil {
		toSerialize["carrierVoyageNumber"] = o.CarrierVoyageNumber
	}
	if o.ExportVoyageNumber != nil {
		toSerialize["exportVoyageNumber"] = o.ExportVoyageNumber
	}
	if o.ImportVoyageNumber != nil {
		toSerialize["importVoyageNumber"] = o.ImportVoyageNumber
	}
	if o.TransportCallSequenceNumber != nil {
		toSerialize["transportCallSequenceNumber"] = o.TransportCallSequenceNumber
	}
	if o.UNLocationCode != nil {
		toSerialize["UNLocationCode"] = o.UNLocationCode
	}
	if o.FacilityCode != nil {
		toSerialize["facilityCode"] = o.FacilityCode
	}
	if o.FacilityCodeListProvider != nil {
		toSerialize["facilityCodeListProvider"] = o.FacilityCodeListProvider
	}
	if o.FacilityTypeCode != nil {
		toSerialize["facilityTypeCode"] = o.FacilityTypeCode
	}
	if o.OtherFacility != nil {
		toSerialize["otherFacility"] = o.OtherFacility
	}
	if true {
		toSerialize["modeOfTransport"] = o.ModeOfTransport
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Vessel != nil {
		toSerialize["vessel"] = o.Vessel
	}
	return json.Marshal(toSerialize)
}

type NullableTransportCall struct {
	value *TransportCall
	isSet bool
}

func (v NullableTransportCall) Get() *TransportCall {
	return v.value
}

func (v *NullableTransportCall) Set(val *TransportCall) {
	v.value = val
	v.isSet = true
}

func (v NullableTransportCall) IsSet() bool {
	return v.isSet
}

func (v *NullableTransportCall) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransportCall(val *TransportCall) *NullableTransportCall {
	return &NullableTransportCall{value: val, isSet: true}
}

func (v NullableTransportCall) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransportCall) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


